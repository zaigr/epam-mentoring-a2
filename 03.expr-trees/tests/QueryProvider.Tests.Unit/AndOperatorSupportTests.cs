/*
 * This task is a bit harder than the previous two.
 * Feel free to change the E3SLinqProvider and any other classes if needed.
 * Possibly, after these changes you will need to rewrite existing tests to make them work again =).
 *
 * The task: implement support of && operator for IQueryable. The final request generated by FTSRequestGenerator, should
 * imply the following rules: https://kb.epam.com/display/EPME3SDEV/Telescope+public+REST+for+data#TelescopepublicRESTfordata-FTSRequestSyntax
 */

using System;
using System.Linq;
using System.Linq.Expressions;
using Expressions.Task3.E3SQueryProvider.Models.Entitites;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using QueryProvider.Processing.Translator;

namespace QueryProvider.Tests.Unit
{
    [TestClass]
    public class AndOperatorSupportTests
    {
        [TestMethod]
        public void TestAndQueryable()
        {
            // Arrange
            var translator = new ExpressionTranslator();
            Expression<Func<IQueryable<EmployeeEntity>, IQueryable<EmployeeEntity>>> expression
                = query => query.Where(e => e.Workstation == "EPRUIZHW006" && e.Manager.StartsWith("John"));

            // Act
            var result = translator.Translate(expression);

            var lines = result.Split(Environment.NewLine);

            // Assert
            Assert.AreEqual(2, lines.Length);

            Assert.AreEqual("Workstation:(EPRUIZHW006)", lines[0]);
            Assert.AreEqual("Manager:(John*)", lines[1]);
        }
    }
}
